<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 配置整合mybatis和数据库，并将其添加到spring中管理 -->
	<!-- 引入参数配置文件.properties -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
        	<list>
        		<value>classpath:jdbc.properties</value>
        		<value>classpath:path.properties</value>
        		<value>classpath:redis.properties</value>
        	</list>
        </property>
        <property name="fileEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
    
    <bean id="downloadPath" class="java.lang.String">
		<constructor-arg index="0" value="${DOWNLOADPATH}"></constructor-arg>
	</bean>
	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg index="0" value="${UPLOADPATH}"></constructor-arg>
	</bean>
	<bean id="tempPath" class="java.lang.String">
		<constructor-arg index="0" value="${TEMPPATH}"></constructor-arg>
	</bean>
	<bean id="encodePath" class="java.lang.String">
		<constructor-arg index="0" value="${ENCODEPATH}"></constructor-arg>
	</bean>
	<bean id="phantomjsPath" class="java.lang.String">
		<constructor-arg index="0" value="${PHANTOMJSPATH}"></constructor-arg>
	</bean>
	
	<!-- 数据库连接池属性配置 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${oracle.jdbc.driverClass}" />
        <property name="url" value="${oracle.jdbc.url}" />
        <property name="username" value="${oracle.jdbc.username}" />
        <property name="password" value="${oracle.jdbc.password}" />
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${oracle.jdbc.initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${oracle.jdbc.maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${oracle.jdbc.maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${oracle.jdbc.minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${oracle.jdbc.maxWait}"></property>
    </bean>
    
    <!-- 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入上面配置的数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 扫描entity包 使用别名
        <property name="typeAliasesPackage" value="com.*.*.entity" /> -->
        <!-- 扫描sql配置文件:mapper需要的xml文件，对应Dao操作中所需的sql语句操作 -->
        <property name="mapperLocations" value="com.cn.*.dao" />
	</bean>
	
	<!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入上面配置的sqlSessionFactory对象 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.cn.*.dao" />
    </bean>
	
</beans>